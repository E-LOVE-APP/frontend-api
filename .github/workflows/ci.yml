name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      db:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: e-love-frontend-api-db
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping -h localhost"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          APP_ENV_PATH: docker/app.env

      - name: Check code formatting with black
        run: |
          poetry run black --check .

      - name: Check import sorting with isort
        run: |
          poetry run isort --check-only .

      - name: Lint code with flake8
        run: |
          poetry run flake8 .

      - name: Type checking with mypy
        run: |
          poetry run mypy .

      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Dockerfile
          push: false
          tags: myapp:latest

      - name: Run Docker container
        run: |
          docker run -d \
            --name fe-api-container \
            -p 8080:8000 \
            --env DATABASE_URL=${{ secrets.DATABASE_URL }} \
            myapp:latest

      - name: Wait for the app to be ready
        uses: jakejarvis/wait-action@v1
        with:
          timeout: "30"
          url: "http://localhost:8080/"

      - name: Test application response
        run: |
          curl -f http://localhost:8080/ || exit 1
