[tool.poetry]
name = "e-love-frontend-api"
version = "0.1.0"
description = ""
authors = ["paketoff <kekisreal228@gmail.com>"]
readme = "README.md"
package-mode = false

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.111.1"
uvicorn = "^0.30.3"
python-dotenv = "^1.0.1"
pydantic = "^2.8.2"
pydantic-settings = "^2.3.4"
sqlalchemy = "^2.0.32"
alembic = "^1.13.2"
pymysql = "^1.1.1"
cryptography = "^43.0.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
aiomysql = "^0.2.0"
asyncmy = "^0.2.9"
jwt = "^1.3.1"
pyjwt = {extras = ["crypto"], version = "^2.9.0"}
python-jose = {extras = ["cryptography"], version = "^3.3.0"}


[tool.poetry.group.dev.dependencies]
black = "^24.4.2"
colorlog = "^6.8.2"
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
httpx = "^0.27.2"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"
faker = "^28.4.1"
isort = "^5.13.2"
mypy = "^1.11.2"
pre-commit = "^3.4.0"
pylint = "^3.0.0"
types-passlib = "^1.7.7.20240819"
pytest-httpx = "^0.31.2"

[tool.pylint]
ignore = [
    "__pycache__",
    "venv",
    ".venv",
    "migrations",
    "node_modules",
    "alembic",
    "easter_eggs"
]
max-line-length = 100
disable = [
    "C0114",  # Missing module docstring
    "C0115",  # Missing class docstring
    "C0116",  # Missing function docstring
    "R0903",  # Too few public methods in class
    "C0301",  # Line too long (it's more comments stuff and it's not really related to the code)
    "W0511",  # TODOS
    "W0718",
    "W0707",  # Тут руганина от PyLint идет на частое переиспользование 'обобщенных' исключений, в чем в целом, он абсолжтно прав. Однако, чтобы оно пропускало дальше код нормально, это нужно не учитывать, поскольку в скором времени я создам кастомные исключения, которые полностью будут покрывать эту проблематику.
    "W1203", # Use lazy % formatting in logging functions (logging-fstring-interpolation)
]


[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.svn
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | \.env
  | \.tox
  | \.eggs
  | \.idea
  | \.vscode
  | build
  | dist
  | htmlcov
  | .*/migrations
  | alembic/versions
  | __pycache__
  | node_modules
  | tmp
  | temp
  | data
  | datasets
  | .*\.egg-info
  | \.cache
  | easter_eggs
)/'''

[tool.isort]
line_length = 100
profile = "black"
skip = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".env",
    "alembic/versions",
    "migrations",
    ".mypy_cache",
    ".pytest_cache",
    ".idea",
    ".vscode",
    "node_modules",
    "tmp",
    "temp",
    "data",
    "datasets",
    "easter_eggs"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

